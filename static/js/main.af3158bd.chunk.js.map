{"version":3,"sources":["store/actions/actionTypes.js","assets/styles/theme.js","components/Todo/TodoItem.js","store/actions/createActions.js","components/Todo/TodoAdd.js","components/common/Loader.js","components/Todo/TodoList.js","store/reducers/reducer.js","utils/API.js","store/sagas/todos.js","store/sagas/index.js","store/index.js","assets/styles/GlobalStyle.js","index.js"],"names":["GET_INIT_DATA_START","GET_INIT_DATA","ADD_ITEM_START","ADD_ITEM","DELETE_ITEM_START","DELETE_ITEM","TOGGLE_ITEM_START","TOGGLE_ITEM","theme","font","family","main","size","xxs","xs","s","m","l","weight","light","regular","bold","color","lightGray","gray","darkGray","white","lightRed","red","green","mq","phone","tablet","desktop","huge","ListItem","styled","li","props","completed","black","ActionBtn","button","DeleteBtn","ToggleBtn","connect","dispatch","toggleItemAction","id","type","deleteItemAction","item","key","onClick","title","disabled","InputText","input","InfoText","p","AddBtn","state","inputValue","list","infoText","getInputValueChangeAction","e","value","target","addItemAction","getInfoTextAction","placeholder","onChange","length","undefined","Spinner","div","Wrapper","List","ul","Title","h1","loaded","getInitItemsAction","useEffect","Loader","map","defaultState","apiUrl","fetchTodos","axios","get","addNewTodo","post","toggleTodo","patch","deleteTodo","delete","getInitItemsData","addItemsData","toggleItemsData","deleteItemData","NUMBER_OF_TODOS_ON_SERVER","API","response","put","data","console","log","getToken","select","token","action","mySaga","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","Date","valueOf","todo","filter","composeWithDevTools","applyMiddleware","run","saga","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af3158bd.chunk.js","sourcesContent":["const GET_INIT_DATA_START = \"GET_INIT_DATA_START\";\r\nconst GET_INIT_DATA = \"GET_INIT_DATA\";\r\nconst INPUT_VALUE_CHANGE = \"INPUT_VALUE_CHANGE\";\r\nconst ADD_ITEM_START = \"ADD_ITEM_START\";\r\nconst ADD_ITEM = \"ADD_ITEM\";\r\nconst DELETE_ITEM_START = \"DELETE_ITEM_START\";\r\nconst DELETE_ITEM = \"DELETE_ITEM\";\r\nconst TOGGLE_ITEM_START = \"TOGGLE_ITEM_START\";\r\nconst TOGGLE_ITEM = \"TOGGLE_ITEM\";\r\nconst INFO_TEXT_CHANGE = \"INFO_TEXT_CHANGE\";\r\n\r\nexport {\r\n  GET_INIT_DATA_START,\r\n  GET_INIT_DATA,\r\n  INPUT_VALUE_CHANGE,\r\n  ADD_ITEM,\r\n  ADD_ITEM_START,\r\n  DELETE_ITEM,\r\n  DELETE_ITEM_START,\r\n  TOGGLE_ITEM_START,\r\n  TOGGLE_ITEM,\r\n  INFO_TEXT_CHANGE\r\n};\r\n","export const theme = {\r\n  font: {\r\n    family: {\r\n      main: \"Roboto, sans-serif\"\r\n    },\r\n    size: {\r\n      xxs: \"1.2rem\",\r\n      xs: \"1.4rem\",\r\n      s: \"1.6rem\",\r\n      m: \"1.8rem\",\r\n      l: \"2rem\",\r\n    },\r\n    weight: {\r\n      light: \"300\",\r\n      regular: \"400\",\r\n      bold: \"700\"\r\n    }\r\n  },\r\n  color: {\r\n    lightGray: '#dcdcdc',\r\n    gray: '#b5b5b5',\r\n    darkGray: '#626262',\r\n    white: '#FFFFFF',\r\n    lightRed: '#f3e4e0',\r\n    red: '#ff0000',\r\n    green: '#008000'\r\n  },\r\n  mq: {\r\n    phone: `@media (min-width: 576px)`,\r\n    tablet: `@media (min-width: 768px)`,\r\n    desktop: `@media (min-width: 1024px)`,\r\n    huge: `@media(min-width: 1440px)`\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  toggleItemAction,\r\n  deleteItemAction\r\n} from \"../../store/actions/createActions\";\r\nimport { theme } from \"../../assets/styles/theme\";\r\n\r\nconst ListItem = styled.li`\r\n  font-size: ${theme.font.size.xs};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1rem 0 1rem 2rem;\r\n  border-bottom: 1px solid #e6ebed;\r\n  cursor: pointer;\r\n\r\n  span {\r\n    color: ${props =>\r\n      props.completed ? `${theme.color.lightGray}` : `${theme.color.black}`};\r\n    text-decoration: ${props => (props.completed ? `line-through` : `none`)};\r\n    padding-right: 4rem;\r\n  }\r\n`;\r\n\r\nconst ActionBtn = styled.button`\r\n  background: none;\r\n  border-radius: 3px;\r\n  border: 2px solid ${theme.color.white};\r\n  cursor: pointer;\r\n  transition: background-color 300ms;\r\n  padding: 0;\r\n  width: 25px;\r\n  height: 25px;\r\n\r\n  &:disabled {\r\n    opacity: 0.4;\r\n\r\n    &:hover {\r\n      border: 2px solid ${theme.color.white};\r\n      background: none;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    border: 2px solid ${theme.color.lightGray};\r\n    background: none;\r\n  }\r\n`;\r\n\r\nconst DeleteBtn = styled(ActionBtn)`\r\n  color: ${theme.color.red};\r\n`;\r\n\r\nconst ToggleBtn = styled(ActionBtn)`\r\n  color: ${props =>\r\n    props.completed ? `${theme.color.black}` : `${theme.color.green}`};\r\n`;\r\n\r\nconst TodoItem = props => {\r\n  const { item, toggleItemAction, deleteItemAction } = props;\r\n\r\n  return (\r\n    <>\r\n      <ListItem completed={item.completed} key={item.id}>\r\n        <span onClick={() => toggleItemAction(item.id, item.completed)}>\r\n          {item.title}\r\n        </span>\r\n\r\n        <div>\r\n          <ToggleBtn\r\n            completed={item.completed}\r\n            onClick={() => toggleItemAction(item.id, item.completed)}\r\n          >\r\n            &#10004;\r\n          </ToggleBtn>\r\n\r\n          <DeleteBtn\r\n            disabled={!item.completed}\r\n            onClick={() => deleteItemAction(item.id)}\r\n          >\r\n            &#10006;\r\n          </DeleteBtn>\r\n        </div>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleItemAction: (id, completed) => dispatch(toggleItemAction(id, completed)),\r\n  deleteItemAction: id => dispatch(deleteItemAction(id))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(TodoItem);\r\n","import {\r\n  GET_INIT_DATA_START,\r\n  INPUT_VALUE_CHANGE,\r\n  ADD_ITEM_START,\r\n  TOGGLE_ITEM_START,\r\n  DELETE_ITEM_START,\r\n  INFO_TEXT_CHANGE\r\n} from \"./actionTypes\";\r\n\r\nconst getInputValueChangeAction = value => ({\r\n  type: INPUT_VALUE_CHANGE,\r\n  value\r\n});\r\n\r\nconst getInitItemsAction = () => ({\r\n  type: GET_INIT_DATA_START\r\n});\r\n\r\nconst addItemAction = () => ({\r\n  type: ADD_ITEM_START\r\n});\r\n\r\nconst toggleItemAction = (id, completed) => ({\r\n  type: TOGGLE_ITEM_START,\r\n  id,\r\n  completed\r\n});\r\n\r\nconst deleteItemAction = id => ({\r\n  type: DELETE_ITEM_START,\r\n  id\r\n});\r\n\r\nconst getInfoTextAction = value => ({\r\n  type: INFO_TEXT_CHANGE,\r\n  value\r\n});\r\nexport {\r\n  getInitItemsAction,\r\n  getInputValueChangeAction,\r\n  addItemAction,\r\n  toggleItemAction,\r\n  deleteItemAction,\r\n  getInfoTextAction\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getInputValueChangeAction,\r\n  addItemAction,\r\n  getInfoTextAction\r\n} from \"../../store/actions/createActions\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"../../assets/styles/theme\";\r\n\r\nconst InputText = styled.input`\r\n  border: none;\r\n  border-bottom: 2px solid ${theme.color.lightGray};\r\n  font-size: ${theme.font.size.xs};\r\n  margin: 0 2rem;\r\n  padding: 0.5rem 0 0.5rem;\r\n  color: black;\r\n`;\r\n\r\nconst InfoText = styled.p`\r\n  color: ${theme.color.gray};\r\n  position: absolute;\r\n  padding-left: 3rem;\r\n  bottom: 5px;\r\n  font-size: ${theme.font.size.xxs};\r\n  font-weight: ${theme.font.weight.light};\r\n  margin: 0;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n  padding: 0.7rem 0.5rem;\r\n  background: ${theme.color.lightGray};\r\n  border-radius: 3px;\r\n  border: 2px solid ${theme.color.lightGray};\r\n  cursor: pointer;\r\n  transition: background-color 300ms;\r\n  position: relative;\r\n  z-index: 99;\r\n\r\n  &:hover {\r\n    background: ${theme.color.white};\r\n  }\r\n`;\r\n\r\nconst TodoAdd = props => {\r\n  const {\r\n    inputValue,\r\n    list,\r\n    infoText,\r\n    getInputValueChangeAction,\r\n    addItemAction,\r\n    getInfoTextAction\r\n  } = props;\r\n\r\n  const handleAddToDo = () => {\r\n    if (list.length >= 10) {\r\n      const infoText = \"Maksymalna ilość zadań to 10\";\r\n      getInfoTextAction(infoText);\r\n    } else if (inputValue === undefined || inputValue === \"\") {\r\n      const infoText = \"Proszę wprowadzić zadanie\";\r\n      getInfoTextAction(infoText);\r\n    } else if (inputValue.length < 3) {\r\n      const infoText = \"Wpisany tekst jest zbyt krótki\";\r\n      getInfoTextAction(infoText);\r\n    } else {\r\n      addItemAction(inputValue);\r\n      getInfoTextAction(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputText\r\n        placeholder=\"Wpisz zadanie\"\r\n        type=\"text\"\r\n        value={inputValue || \"\"}\r\n        onChange={getInputValueChangeAction}\r\n      />\r\n\r\n      <AddBtn onClick={handleAddToDo}>Dodaj zadanie</AddBtn>\r\n\r\n      <InfoText>{infoText}</InfoText>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    inputValue: state.inputValue,\r\n    list: state.list,\r\n    infoText: state.infoText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getInputValueChangeAction: e => dispatch(getInputValueChangeAction(e.target.value)),\r\n  addItemAction: id => dispatch(addItemAction(id)),\r\n  getInfoTextAction: infoText => dispatch(getInfoTextAction(infoText))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoAdd);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"../../assets/styles/theme\";\r\n\r\nconst Spinner = styled.div`\r\n  position: absolute;\r\n  right: 17px;\r\n  top: 20px;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: ${theme.color.darkGray};\r\n\r\n  border-radius: 100%;\r\n  -webkit-animation: sk-scaleout 500ms infinite ease-in-out;\r\n  animation: sk-scaleout 500ms infinite ease-in-out;\r\n\r\n  @-webkit-keyframes sk-scaleout {\r\n    0% {\r\n      -webkit-transform: scale(0);\r\n    }\r\n    100% {\r\n      -webkit-transform: scale(1);\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  @keyframes sk-scaleout {\r\n    0% {\r\n      -webkit-transform: scale(0);\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      -webkit-transform: scale(1);\r\n      transform: scale(1);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default () => <Spinner />;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getInitItemsAction } from \"../../store/actions/createActions\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoAdd from \"./TodoAdd\";\r\nimport Loader from \"../common/Loader\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"../../assets/styles/theme\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  min-width: 300px;\r\n  padding: 2rem 0.5rem 2rem 0;\r\n  background: ${theme.color.white};\r\n  border: 1px solid ${theme.color.lightGray};\r\n  border-radius: 2px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n\r\n  ${theme.mq.phone} {\r\n    padding: 3rem 0.5rem 3rem 0;\r\n  }\r\n\r\n  ${theme.mq.tablet} {\r\n    min-width: 400px;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: -1;\r\n    height: 4px;\r\n    background: ${theme.color.white};\r\n    border: 1px solid ${theme.color.lightGray};\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &:after {\r\n    left: 0;\r\n    right: 0;\r\n    bottom: -3px;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  &:before {\r\n    left: 2px;\r\n    right: 2px;\r\n    bottom: -5px;\r\n    border-color: #c4c4c4;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  border-top: 1px solid ${theme.color.lightGray};\r\n  list-style-type: none;\r\n\r\n  ${theme.mq.tablet} {\r\n    &::before {\r\n      content: \"\";\r\n      width: 3px;\r\n      z-index: 2;\r\n      border: 1px solid ${theme.color.lightRed};\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: ${theme.font.weight.bold};\r\n  padding-left: 2rem;\r\n  margin: 0;\r\n`;\r\n\r\nconst TodoList = props => {\r\n  const { getInitItemsAction, list, loaded } = props;\r\n\r\n  useEffect(() => {\r\n    getInitItemsAction();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        {!loaded && <Loader />}\r\n\r\n        <Title>Lista zadań</Title>\r\n\r\n        <List>\r\n          {list && list.map(item => <TodoItem key={item.id} item={item} />)}\r\n        </List>\r\n\r\n        <TodoAdd />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.list,\r\n    loaded: state.loaded\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getInitItemsAction: () => dispatch(getInitItemsAction())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);\r\n","import {\r\n  ADD_ITEM_START,\r\n  ADD_ITEM,\r\n  DELETE_ITEM_START,\r\n  DELETE_ITEM,\r\n  GET_INIT_DATA,\r\n  INPUT_VALUE_CHANGE,\r\n  TOGGLE_ITEM_START,\r\n  TOGGLE_ITEM,\r\n  INFO_TEXT_CHANGE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst defaultState = {\r\n  inputValue: \"\",\r\n  list: [],\r\n  loaded: false,\r\n  infoText: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GET_INIT_DATA: {\r\n      return { ...state, loaded: true, list: action.value };\r\n    }\r\n    case INPUT_VALUE_CHANGE: {\r\n      return { ...state, inputValue: action.value };\r\n    }\r\n    case ADD_ITEM_START: {\r\n      return { ...state, loaded: false };\r\n    }\r\n    case ADD_ITEM: {\r\n      //@todo temporary, prevent duplicate id, because fake api server doesn't save new todos\r\n      action.value.id = new Date().valueOf();\r\n\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.value],\r\n        inputValue: \"\",\r\n        loaded: true\r\n      };\r\n    }\r\n    case TOGGLE_ITEM_START: {\r\n      return { ...state, loaded: false };\r\n    }\r\n    case TOGGLE_ITEM: {\r\n      return {\r\n        ...state,\r\n        list: state.list.map(todo =>\r\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n        ),\r\n        loaded: true\r\n      };\r\n    }\r\n    case DELETE_ITEM_START: {\r\n      return { ...state, loaded: false };\r\n    }\r\n    case DELETE_ITEM: {\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(todo => todo.id !== action.id),\r\n        loaded: true\r\n      };\r\n    }\r\n    case INFO_TEXT_CHANGE: {\r\n      return {\r\n        ...state,\r\n        infoText: action.value\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\n//This is FAKE API, changes aren't persisted\r\nconst apiUrl =\r\n  \"https://my-json-server.typicode.com/maruw4k/fake-rest-server/todos\";\r\n\r\nconst fetchTodos = () => {\r\n  return axios.get(apiUrl);\r\n};\r\n\r\nconst addNewTodo = title => {\r\n  return axios.post(apiUrl, {\r\n    title: title,\r\n    completed: false\r\n  });\r\n};\r\n\r\nconst toggleTodo = (id, completed) => {\r\n  return axios.patch(`${apiUrl}/${id}`, {\r\n    completed: completed\r\n  });\r\n};\r\n\r\nconst deleteTodo = id => {\r\n  return axios.delete(`${apiUrl}/${id}`);\r\n};\r\n\r\nexport default {\r\n  fetchTodos: fetchTodos,\r\n  addNewTodo: addNewTodo,\r\n  toggleTodo: toggleTodo,\r\n  deleteTodo: deleteTodo\r\n};\r\n","import {\r\n  ADD_ITEM,\r\n  TOGGLE_ITEM,\r\n  DELETE_ITEM, GET_INIT_DATA\r\n} from \"../actions/actionTypes\";\r\nimport API from \"../../utils/API\";\r\nimport { select, put } from \"@redux-saga/core/effects\";\r\n\r\nconst NUMBER_OF_TODOS_ON_SERVER = 4;\r\n\r\nexport function* getInitItemsData() {\r\n  try {\r\n    const response = yield API.fetchTodos();\r\n    yield put({ type: GET_INIT_DATA, value: response.data });\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n  }\r\n}\r\n\r\nexport  function* addItemsData() {\r\n  try {\r\n    const getToken = state => state;\r\n    const token = yield select(getToken);\r\n    const response = yield API.addNewTodo(token.inputValue);\r\n\r\n    yield put({ type: ADD_ITEM, value: response.data });\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n  }\r\n}\r\n\r\nexport function* toggleItemsData(action) {\r\n  try {\r\n    //@todo ugly, because is used faked API (only 4 constant post on server) and locally changes aren't persisted\r\n    if (action.id <= NUMBER_OF_TODOS_ON_SERVER) {\r\n      const response = yield API.toggleTodo(action.id, !action.completed);\r\n      yield put({ type: TOGGLE_ITEM, id: response.data.id });\r\n    } else {\r\n      yield put({ type: TOGGLE_ITEM, id: action.id });\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n  }\r\n}\r\n\r\nexport function* deleteItemData(action) {\r\n  try {\r\n    if (action.id <= NUMBER_OF_TODOS_ON_SERVER) {\r\n      yield API.deleteTodo(action.id);\r\n    }\r\n    yield put({ type: DELETE_ITEM, id: action.id });\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n  }\r\n}\r\n","import { takeEvery } from \"@redux-saga/core/effects\";\r\nimport {\r\n  getInitItemsData,\r\n  addItemsData,\r\n  toggleItemsData,\r\n  deleteItemData\r\n} from \"./todos\";\r\nimport {\r\n  ADD_ITEM_START,\r\n  DELETE_ITEM_START,\r\n  GET_INIT_DATA_START,\r\n  TOGGLE_ITEM_START\r\n} from \"../actions/actionTypes\";\r\n\r\nfunction* mySaga() {\r\n  yield takeEvery(GET_INIT_DATA_START, getInitItemsData);\r\n  yield takeEvery(ADD_ITEM_START, addItemsData);\r\n  yield takeEvery(TOGGLE_ITEM_START, toggleItemsData);\r\n  yield takeEvery(DELETE_ITEM_START, deleteItemData);\r\n}\r\n\r\nexport default mySaga;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducer from \"./reducers/reducer\";\r\nimport saga from \"./sagas\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\nsagaMiddleware.run(saga);\r\n\r\nexport default store;\r\n","import {createGlobalStyle} from \"styled-components\";\r\nimport {theme} from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n \r\n*, *::before, *::after {\r\n  box-sizing: border-box;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\n\r\nbody {\r\n  font-size: 1.6rem;\r\n  font-family: ${theme.font.family.main};\r\n  font-weight: 300;\r\n  line-height: 1.5;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin: 0;\r\n  padding: 0;\r\n    \r\nbackground-color: #000000;\r\nbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpolygon fill='%230c1122' points='1600 160 0 460 0 350 1600 50'/%3E%3Cpolygon fill='%23182244' points='1600 260 0 560 0 450 1600 150'/%3E%3Cpolygon fill='%23253366' points='1600 360 0 660 0 550 1600 250'/%3E%3Cpolygon fill='%23314488' points='1600 460 0 760 0 650 1600 350'/%3E%3Cpolygon fill='%233d55aa' points='1600 800 0 800 0 750 1600 450'/%3E%3C/g%3E%3C/svg%3E\");\r\nbackground-attachment: fixed;\r\nbackground-size: cover;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n\r\na {\r\n  color: black;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport TodoList from \"./components/Todo/TodoList\";\r\nimport store from \"./store\";\r\nimport GlobalStyle from \"./assets/styles/GlobalStyle\";\r\n\r\nconst App = (\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <TodoList />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(App, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}